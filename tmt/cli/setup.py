""" Command line interface for tmt setup command """

import os
import subprocess
import sys
from typing import Any

import click

import tmt
import tmt.utils
from tmt.cli.click_group import CustomGroup


@click.group(cls=CustomGroup)
@click.pass_context
def setup(context: click.core.Context, **kwargs: Any) -> None:
    """
    Setup the environment for working with tmt.
    """


@setup.group(cls=CustomGroup)
@click.pass_context
def completion(context: click.core.Context, **kwargs: Any) -> None:
    """
    Setup shell completions.

    By default, these commands only write a shell script to the output
    which can then be sourced from the shell's configuration file. Use
    the '--install' option to store and enable the configuration
    permanently.
    """


COMPLETE_VARIABLE = '_TMT_COMPLETE'
COMPLETE_SCRIPT = 'tmt-complete'


def setup_completion(shell: str, install: bool) -> None:
    """ Setup completion based on the shell """
    config = tmt.utils.Config()
    # Fish gets installed into its special location where it is automatically
    # loaded.
    if shell == 'fish':
        script = os.path.expanduser('~/.config/fish/completions/tmt.fish')
    # Bash and zsh get installed to tmt's config directory.
    else:
        script = os.path.join(config.path, f'{COMPLETE_SCRIPT}.{shell}')

    out = open(script, 'w') if install else sys.stdout
    subprocess.run(f'{COMPLETE_VARIABLE}={shell}_source tmt',
                   shell=True, stdout=out)

    if install:
        out.close()
        # If requested, modify .bashrc or .zshrc
        if shell != 'fish':
            config_path = os.path.expanduser(f'~/.{shell}rc')
            with open(config_path, 'a') as shell_config:
                shell_config.write('\n# Generated by tmt\n')
                shell_config.write(f'source {script}')


@completion.command(name='bash')
@click.pass_context
@click.option(
    '--install', '-i', 'install', is_flag=True,
    help="Persistently store the script to tmt's configuration directory "
         "and set it up by modifying '~/.bashrc'.")
def completion_bash(context: click.core.Context, install: bool, **kwargs: Any) -> None:
    """
    Setup shell completions for bash.
    """
    setup_completion('bash', install)


@completion.command(name='zsh')
@click.pass_context
@click.option(
    '--install', '-i', 'install', is_flag=True,
    help="Persistently store the script to tmt's configuration directory "
         "and set it up by modifying '~/.zshrc'.")
def completion_zsh(context: click.core.Context, install: bool, **kwargs: Any) -> None:
    """
    Setup shell completions for zsh.
    """
    setup_completion('zsh', install)


@completion.command(name='fish')
@click.pass_context
@click.option(
    '--install', '-i', 'install', is_flag=True,
    help="Persistently store the script to "
         "'~/.config/fish/completions/tmt.fish'.")
def completion_fish(context: click.core.Context, install: bool, **kwargs: Any) -> None:
    """
    Setup shell completions for fish.
    """
    setup_completion('fish', install)
